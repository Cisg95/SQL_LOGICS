 WITH CHILE AS (SELECT DISTINCT
        FECHA
        ,SAFE_DIVIDE(CAST(
                        ((SUM(IFNULL(PAGADAS,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PARTIALLY_REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PAGADAS_REVERSED,0)) OVER (PARTITION BY FECHA))) AS FLOAT64
                        ) , 
                    CAST(
                        (SUM(IFNULL(PAGADAS,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PARTIALLY_REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PAGADAS_REVERSED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(RECHAZADAS,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(RECHAZADAS_REV,0)) OVER (PARTITION BY FECHA)) AS FLOAT64)
                    )  AS CONV_MDP
        ,SAFE_DIVIDE(CAST(
                        ((SUM(IFNULL(PAGADAS,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PARTIALLY_REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PAGADAS_REVERSED,0)) OVER (PARTITION BY FECHA))) AS FLOAT64
                        ) , 
                    CAST(
                        (SUM(IFNULL(PAGADAS,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PARTIALLY_REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(REFUNDED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(PAGADAS_REVERSED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(RECHAZADAS,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(RECHAZADAS_REV,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(CREATED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(AUTHORIZED,0)) OVER (PARTITION BY FECHA) + SUM(IFNULL(REVERSADAS,0)) OVER (PARTITION BY FECHA)) AS FLOAT64)
                    )  AS CONV_FUNNEL
        , TOTAL
    FROM (
        SELECT DISTINCT
            DATE_TRUNC(CREATE_TIME_LOCAL,MONTH) AS FECHA
            ,CASE 
                WHEN UPPER(STATE) IN ('CREATED') THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE)
                END CREATED
            ,CASE 
                WHEN UPPER(STATE) IN ('AUTHORIZED') THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE)
                END AUTHORIZED
            ,CASE 
                WHEN UPPER(STATE) IN ('PAID') THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE)
                END PAGADAS
            ,CASE 
                WHEN UPPER(STATE) IN ('PARTIALLY_REFUNDED') THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH) ,STATE)
                END PARTIALLY_REFUNDED
            ,CASE 
                WHEN UPPER(STATE) IN ('REFUNDED') THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE)
                END REFUNDED
            ,CASE 
                WHEN (UPPER(STATE) IN ('REVERSED') AND AUTHORIZATIONS_CODE IS NOT NULL) THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE,AUTHORIZATIONS_CODE IS NOT NULL)
                END PAGADAS_REVERSED
            ,CASE 
                WHEN UPPER(STATE) IN ('REJECTED') THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE)
                END RECHAZADAS
            ,CASE 
                WHEN UPPER(STATE) IN ('REVERSED') AND ERROR_MESSAGE_FINAL IS NOT NULL THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE,ERROR_MESSAGE_FINAL IS NOT NULL)
                END RECHAZADAS_REV
            ,CASE 
                WHEN UPPER(STATE) IN ('REVERSED') AND ERROR_MESSAGE_FINAL IS NULL  AND AUTHORIZATIONS_CODE IS NULL THEN SUM(1) OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH),STATE,ERROR_MESSAGE_FINAL IS NULL, AUTHORIZATIONS_CODE IS NULL)
                END REVERSADAS
            ,COUNT(ID)  OVER (PARTITION BY DATE_TRUNC(CREATE_TIME_LOCAL,MONTH)) AS TOTAL
    FROM `XXXX.XXXXX` INTENTIONS
    WHERE 
            EXTRACT(YEAR FROM CREATE_TIME_LOCAL) >= EXTRACT(YEAR FROM CURRENT_DATE('America/Santiago')) - 1
            AND [...]
            AND
            --2024-02-08 CS: Removiendo pruebas de YYYYY
                CASE
                    WHEN APPLICATION_ID LIKE 'XXXXX' THEN TRANSACTION_AMOUNT_TOTAL > 100
                    ELSE TRANSACTION_AMOUNT_TOTAL >= 0
                END 
            AND 
            --2024-02-08 CS: Removiendo reintentos de ZZZZZ
                CASE
                    WHEN APPLICATION_ID LIKE 'XXXXX' THEN EXTRACT(HOUR FROM CREATE_TIME_LOCAL) > 9 
                    ELSE EXTRACT(HOUR FROM CREATE_TIME_LOCAL) >= 0
                END
    )
 )
 ,[...]

, MONTHS AS (
  SELECT CREATE_DATE 
  FROM UNNEST(GENERATE_DATE_ARRAY(
                                DATE_SUB(
                                    DATE_TRUNC(CURRENT_DATE('America/Santiago'),YEAR)
                                    , INTERVAL 1 YEAR)
                                ,DATE_TRUNC(CURRENT_DATE('America/Santiago'),MONTH),INTERVAL 1 MONTH)) AS CREATE_DATE
)
, CYB_CL AS (
    SELECT DISTINCT
    M.CREATE_DATE
    ,SAFE_DIVIDE(CAST(
                    (SUM(IFNULL(FC.PAID,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(IFNULL(TC.PAID,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(IFNULL(SC.PAID,0)) OVER (PARTITION BY M.CREATE_DATE)) AS FLOAT64), 
                CAST(
                    (SUM(IFNULL(FC.PAID,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(IFNULL(TC.PAID,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(IFNULL(SC.PAID,0)) OVER (PARTITION BY M.CREATE_DATE)
                    + SUM(IFNULL(FC.REJECTED,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(IFNULL(TC.REJECTED,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(IFNULL(SC.REJECTED,0)) OVER (PARTITION BY M.CREATE_DATE)
                    ) AS FLOAT64)
            ) AS CONV_CYB_CL
    ,SUM(DISTINCT IFNULL(FC.TOTAL,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(DISTINCT IFNULL(TC.TOTAL,0)) OVER (PARTITION BY M.CREATE_DATE) + SUM(DISTINCT IFNULL(SC.TOTAL,0)) OVER (PARTITION BY M.CREATE_DATE) AS TOTAL
    FROM MONTHS AS M
    LEFT JOIN XXXX FC
    ON M.CREATE_DATE= FC.CREATE_DATE
    LEFT JOIN YYYY TC
    ON M.CREATE_DATE= TC.CREATE_DATE
    LEFT JOIN ZZZZ SC
    ON M.CREATE_DATE= SC.CREATE_DATE
)
, [...]

, MAIN_CL AS (
    SELECT DISTINCT DATE_TRUNC(DATE(T1.file_date),MONTH) AS DATE_
      ,count(T1.TRANSACTION_RAW_ID) OVER (PARTITION BY  DATE_TRUNC(DATE(T1.file_date),MONTH) ) as TOTAL
      ,sum(installment_amount) OVER (PARTITION BY  DATE_TRUNC(DATE(T1.file_date),MONTH) ) as NMV
    FROM `XXXX.XXXX` T1
    INNER JOIN `YYYY.YYYY` T2
      ON T1.account_id = T2.wallet_info_creditor_account_id
      AND operation_type = '999999'
      AND EXTRACT(YEAR FROM T1.file_date) >= EXTRACT(YEAR FROM CURRENT_DATE('America/Santiago')) - 1
)
, ADEL_CL AS (
  SELECT DISTINCT  DATE_TRUNC(DATE(DATE(T1.EVENT_DATE)),MONTH)  AS DATE_
      ,count(T1.EVENT_ID) OVER (PARTITION BY  DATE_TRUNC(DATE(DATE(T1.EVENT_DATE)),MONTH) ) as TOTAL
      ,sum(transaction_amount) OVER (PARTITION BY  DATE_TRUNC(DATE(DATE(T1.EVENT_DATE)),MONTH) ) as NMV
  FROM `ZZZZ.ZZZZ` T1
  inner join `VVVV.VVVV` T2
    on T1.merchant_id=T2.MP_sellers_merchant_id
  where org_operation_id  = '999999'
    AND EXTRACT( YEAR FROM EVENT_DATE) >= EXTRACT(YEAR FROM CURRENT_DATE('America/Santiago')) - 1
)
, [...]

 SELECT DISTINCT
    M.CREATE_DATE
    ,T1.CONV_MDP AS CONV_MDP_CL
    ,T1.CONV_FUNNEL AS CONV_FUNNEL_CL
    ,T1.TOTAL AS TRX_CL
    ,[...]
    ,T12.TOTAL AS SELLER_TOTAL_AGEN_CO
    ,T11.NMV/T12.NMV AS SELLER_NMV_CO
    ,T11.NMV AS SELLER_NMV_ADEL_CO
    ,T12.NMV AS SELLER_NMV_AGEN_CO
FROM MONTHS AS M
LEFT JOIN CHILE T1
    ON M.CREATE_DATE = T1.FECHA
LEFT JOIN PERU T2
    ON M.CREATE_DATE=T2.FECHA
LEFT JOIN COLOMBIA T3
    ON M.CREATE_DATE=T3.FECHA
[...]
LEFT JOIN MAIN_CO T12
    ON M.CREATE_DATE = T12.DATE_
ORDER BY 1
